DOC_DATA=[
{"section":"classes","group":"apidoc","id":"jsPlumb.class:addEndpoint","name":false,"shortName":"addEndpoint","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"addEndpoint","moduleSubItem":"","keywords":"add added addendpoints adds allowed an anything are arguments array be by can class contain containing created either el element elements endpoint endpoints for function given had id if in information it jsplumb merged more newly number object of or otherwise parameters params referenceparams referred representing reuse see selector shared single some that the these this to use values wanted when will with would you","codeBlocks":[
{"lineStart":1415,"lineEnd":1426}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:addEndpoints","name":false,"shortName":"addEndpoints","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"addEndpoints","moduleSubItem":"","keywords":"add added adds an argument arguments array be by class containing created documentation each either element elements endpoint endpoints entry for function given had id if in is it jsplumb list merged more newly number object objects of one or parameters params referenceparams representing reuse see selector shared some target that the these this to use wanted when will with would you","codeBlocks":[
{"lineStart":1463,"lineEnd":1470}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:bind","name":false,"shortName":"bind","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"bind","moduleSubItem":"","keywords":"bind binds class event fn function given jsplumb some to","codeBlocks":[
{"lineStart":723,"lineEnd":729}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:connect","name":false,"shortName":"connect","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"connect","moduleSubItem":"","keywords":"along are be between calls can class common connect connection created elements establishes function have if into jsplumb merge multiple new object of optional parameters params referenceparams registered second set settings share some that the themselves this to two useful was which will with you","codeBlocks":[
{"lineStart":1548,"lineEnd":1556}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:deleteEndpoint","name":false,"shortName":"deleteEndpoint","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"deleteEndpoint","moduleSubItem":"","keywords":"after all an and call class connections current defaults deleteendpoint deletes donotrepaintafterwards either endpoint endpoints everything false from function has indicates instance involved it js jsplumb not object or other removes repaint representing string the this to too uuid whether","codeBlocks":[
{"lineStart":1579,"lineEnd":1590}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:deleteEveryEndpoint","name":false,"shortName":"deleteEveryEndpoint","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"deleteEveryEndpoint","moduleSubItem":"","keywords":"and associated because best class clear connection current deleteeveryendpoint deletes distinct dont endpoint every for from function here instance is js jsplumb listeners often reason reset so that the their this to way we","codeBlocks":[
{"lineStart":1603,"lineEnd":1613}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:detach","name":false,"shortName":"detach","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"detach","moduleSubItem":"","keywords":"allows an any are be beforedetach behind call callback class connection defaults detach detached detaches don event false fire fireevent forcedetach function here if indicates is jsplumb listeners made may need not optional override parameters params probably programmatic registered successful that the thinking this to true valid values want you","codeBlocks":[
{"lineStart":1674,"lineEnd":1684}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:detachAllConnections","name":false,"shortName":"detachAllConnections","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"detachAllConnections","moduleSubItem":"","keywords":"all alowed an class connections current defaults detach either el element event fire fireevent for function id instance jsplumb not of optional or parameters params removes selector the to true values whether","codeBlocks":[
{"lineStart":1727,"lineEnd":1734}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:detachEveryConnection","name":false,"shortName":"detachEveryConnection","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"detachEveryConnection","moduleSubItem":"","keywords":"all auto but class connection connections containing current defaults delete detach elements endpoints events fire fireevent from function in instance is its jsplumb leaves not object optional or params place remove set the to true whether","codeBlocks":[
{"lineStart":1749,"lineEnd":1756}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:getSelector","name":false,"shortName":"getSelector","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"getSelector","moduleSubItem":"","keywords":"an and applications argument as be case class code context current demo element exists for from function given helper in into it jsplumb library may method more null of omitted one only pages pass re really search selector spec string takes target than that the this those to turns underlying using valid where will writing you","codeBlocks":[
{"lineStart":2107,"lineEnd":2115}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:getType","name":false,"shortName":"getType","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"getType","moduleSubItem":"","keywords":"class connection endpoint exists function get given id if it jsplumb null of or otherwise retrieve returns specification the to type typedescriptor","codeBlocks":[
{"lineStart":679,"lineEnd":686}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:importDefaults","name":false,"shortName":"importDefaults","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"importDefaults","moduleSubItem":"","keywords":"all class current defaults function given import imports instance into jsplumb of the this to","codeBlocks":[
{"lineStart":736,"lineEnd":742}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb","name":false,"shortName":"jsPlumb","docType":"module","module":"jsPlumb","moduleSection":"","moduleItem":"","moduleSubItem":"","keywords":"an and canvas com connect copyright dual either elements gpl2 html jsplumb licensed licenses mit module on or org page porritt provides simon site svg the to under using visually vml way","codeBlocks":[
{"lineStart":1,"lineEnd":18}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:registerConnectionType","name":false,"shortName":"registerConnectionType","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"registerConnectionType","moduleSubItem":"","keywords":"class connection containing function given id instance jsplumb object of on registers specification the this type typeid","codeBlocks":[
{"lineStart":633,"lineEnd":639}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:registerConnectionTypes","name":false,"shortName":"registerConnectionTypes","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"registerConnectionTypes","moduleSubItem":"","keywords":"all and class connection contain containing expected function given instance is jsplumb keys object objects of on registers specification specifications the this to type typeids types values with","codeBlocks":[
{"lineStart":644,"lineEnd":650}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:registerEndpointType","name":false,"shortName":"registerEndpointType","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"registerEndpointType","moduleSubItem":"","keywords":"class containing endpoint function given id instance jsplumb object of on registers specification the this type typeid","codeBlocks":[
{"lineStart":656,"lineEnd":662}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:registerEndpointTypes","name":false,"shortName":"registerEndpointTypes","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"registerEndpointTypes","moduleSubItem":"","keywords":"all and class contain containing endpoint expected function given instance is jsplumb keys object objects of on registers specification specifications the this to type typeids types values with","codeBlocks":[
{"lineStart":667,"lineEnd":673}],"source":false},
{"section":"classes","group":"apidoc","id":"jsPlumb.class:restoreDefaults","name":false,"shortName":"restoreDefaults","docType":"function","module":"jsPlumb","moduleSection":"class","moduleItem":"restoreDefaults","moduleSubItem":"","keywords":"class current default factory function instance jsplumb restores settings the to values","codeBlocks":[
{"lineStart":751,"lineEnd":756}],"source":false}];